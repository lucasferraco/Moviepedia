//
//  ListMoviesPresenter.swift
//  Moviepedia
//
//  Created by Lucas Ferraço on 29/08/18.
//  Copyright (c) 2018 Lucas Ferraço. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListMoviesPresentationLogic {
	func presentMoviesList(with response: ListMovies.ListMovies.Response)
}

class ListMoviesPresenter: ListMoviesPresentationLogic {
	weak var viewController: ListMoviesDisplayLogic?
	
	//MARK:- ListMoviesPresentationLogic protocol
	
	func presentMoviesList(with response: ListMovies.ListMovies.Response) {
		let moviesInfo = response.movies?.map { (movie) -> ListMovies.DisplayableMovieInfo in
			return displayableInfo(from: movie)
		}
		
		var errorMessage: String? = nil
		if let error = response.error {
			errorMessage = message(for: error)
		}
		
		let viewModel = ListMovies.ListMovies.ViewModel(moviesInfo: moviesInfo, errorMessage: errorMessage)
		
		// UI operations should only be done on the main thread
		DispatchQueue.main.async {
			self.viewController?.displayMoviesList(with: viewModel)
		}
	}
	
	//MARK:- Auxiliary methods
	
	private func displayableInfo(from movie: Movie) -> ListMovies.DisplayableMovieInfo {
		let id = movie.id ?? -1
		
		var movieTitle = ""
		if let title = movie.title {
			movieTitle = title
		} else if let originalTitle = movie.originalTitle {
			movieTitle = originalTitle
		}
		
		var genresString = ""
		if let genreIds = movie.genreIds {
			let genreIdsReduced = genreIds.reduce(into: "", { (genresString, id) in
				genresString += String(id) + ", "
			}).dropLast(2)
			
			genresString = String(genreIdsReduced)
		}
		
		var releaseDate = ""
		if let dateObj = movie.releaseDate {
			releaseDate = DateFormatter.localizedString(from: dateObj, dateStyle: .short, timeStyle: .none)
		}
		
		return ListMovies.DisplayableMovieInfo(id: id, title: movieTitle, image: nil, genre: genresString, releaseDate: releaseDate)
	}
	
	private func message(for error: MoviesAPIWorkerError) -> String {
		switch error {
		case .NoConnection:
			return "No internet connection.\nConnect to a network and try again."
		case .Failure:
			return "We had problems fetching the movies info, please try again later."
		}
	}
}
